def artifactname = "133testing-app.jar"
def repoName = "rome-rp1-app-repo"
def pipelineName = "balu_scripted_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "rome-rp1-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "rome-rp1-package"

pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
	}  
  stages {
       stage('Build &1') {
           steps {
              
              //sh 'mvn -B -DskipTests clean compile'
			
           }
           post {
             always {
                //junit "**/target/surefire-reports/*.xml"
             }
           }
       }
       stage('Test &2') {
           steps {
              
              
           }
           post {
             always {
                //junit "**/target/surefire-reports/*.xml"
             }
           }
       }



      
      stage('CodeCoverage &5') {
                 steps {
                    
                    echo 'sonar summaries....'
                                       
                 }
      }
      
           stage('Upload-JFrog_Artifact') {
            steps {
                echo 'uploading jfrog artifact......'
            }
            
            post { 
                always { 
	                script { 
			                 def server = Artifactory.server 'devopsbalujfrog'
			                 def uploadSpec= """{
			                    "files": [{
			                       "pattern": "/var/jenkins_home/workspace/jfrog_fs/target/test_devops-0.0.1-SNAPSHOT.jar",
			                       "target":"balu_maven-libs-snapshot-local/jfrog_pipeline_upload/"
			                    }]
			                 }"""
			
			              def buildInfo = server.upload(uploadSpec) 
			              server.publishBuildInfo buildInfo   
	        		}
       			 }
       		}
            
        }//end of stage
        stage('Download-JFrog_Artifact') {
            steps {
                echo 'downloading jfrog artifact'
            }
            
            post {
                  always {
                  		
                   script { 
			                 def server = Artifactory.server 'devopsbalujfrog'
			                 def downSpec= """{
			                    "files": [{
			                       "pattern": "balu_maven-libs-snapshot-local/jfrog_pipeline_upload/test_devops-0.0.1-SNAPSHOT.jar",
			                       "target":"balu_maven-libs-snapshot-local/jfrog_pipeline_download/${BUILD_NUMBER}/"
			                    }]
			                 }"""
			
			              def buildInfo = server.download(downSpec) 
			              server.publishBuildInfo buildInfo   
			       	 	
			        
			        } // end of script
			        
			       } //end of always
            }//end of post
       
       } //end of stage

       
      stage('Deploy &3') {
                 steps {
                    
                    echo 'Deploying the change....'
                    snDevOpsChange(ignoreErrors:false)
 
                    //snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           			//snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
                    
                 }
      }   

      

        
 
 }//end of stages
} //end of pipeline

	
